* en vez de buscar dentro de los elementos la 
identificacion, se pasa ya la identificacion del elemento en el elemento.

*ele_selected = selectedElement.selected

*node_selected = nodes.selected

*connection_selected = graph.selected

*0 = null,false, only nodes y graphs

*d = pathToDraw

*elements precanvas(drawflow) & container(parent-drawflow) = vue parent => parent

*render = vue api original

*click.switch.element.output = start connection

--reroute_fix_curvature siempre tiene un valor de false. por ende tiende a desaparecer

!se tiene que desarrollar un metodo para reutilizar el espacio de los nodos y grafos al cambiar de board. ~consultar sobre referencias y links

--se elimina getModuleFromNodeId ya que tiene una complejidad de tiempo alta de O(n^2)

!se tiene que desarrollar metodos para guardar cambios en el board o de manera global, donde el global actualice los servicios y grafos en mongo. el guardado normal solo afecta los grafos y servicios dentro de la board

--los grafos y nodos dentro de la board al pasar a primer plano se pasa su contenido a la raiz del store del drawflow, por ende solo se actualiza en un sitio 

*connection_ele hace referencia al elemento HTML, la cual no es necesaria ya que podemos acceder a la data previamente guardada en el store

*curvature, reroute_curvature_start_end y reroute_curvature tienen el mismo valor y nunca se cambia, por ende solo se deja curvature.

*propiedad nodeId en el store no es necesaria ya que se genera de manera ramdom en el store

*contextmenuDel se elimina ya que cada componente tendra la responsabilidad de switchear los estados de los elementos.

!el maximo de anidaciones en los inputs y outputs son 6.

!se debe reservar los nombres padre de los inputs y outputs.